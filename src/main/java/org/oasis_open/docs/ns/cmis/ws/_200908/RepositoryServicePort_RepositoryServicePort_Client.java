
package org.oasis_open.docs.ns.cmis.ws._200908;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

import javax.xml.namespace.QName;
import javax.xml.ws.soap.MTOMFeature;

import org.apache.cxf.endpoint.Client;
import org.apache.cxf.endpoint.Endpoint;
import org.apache.cxf.frontend.ClientProxy;
import org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;
import org.apache.wss4j.dom.WSConstants;
import org.apache.wss4j.dom.handler.WSHandlerConstants;
import org.oasis_open.docs.ns.cmis.messaging._200908.CmisRepositoryEntryType;
//import javax.jws.WebMethod;
//import javax.jws.WebParam;
//import javax.jws.WebResult;
//import javax.jws.WebService;
//import javax.xml.bind.annotation.XmlSeeAlso;
//import javax.xml.ws.RequestWrapper;
//import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-06-13T13:40:11.541+02:00
 * Generated source version: 3.2.4
 *
 */
public final class RepositoryServicePort_RepositoryServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://docs.oasis-open.org/ns/cmis/ws/200908/", "RepositoryService");

    private RepositoryServicePort_RepositoryServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = RepositoryService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            // File wsdlFile = new File("/home/andreas/hj√∏rring/soap-java-sandbox/alfresco.wsdl");
        	File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        MTOMFeature mtomFeature = new MTOMFeature();
        
        RepositoryService ss = new RepositoryService(wsdlURL, SERVICE_NAME);
        RepositoryServicePort port = ss.getRepositoryServicePort(mtomFeature);
        
        Client client = ClientProxy.getClient(port);
        Endpoint endpoint = client.getEndpoint();

        Map<String, Object> outProps = new HashMap<String, Object>();
        outProps.put(WSHandlerConstants.ACTION, WSHandlerConstants.USERNAME_TOKEN);
        outProps.put(WSHandlerConstants.USER, "admin");
        outProps.put(WSHandlerConstants.PASSWORD_TYPE, WSConstants.PW_TEXT);
        outProps.put(WSHandlerConstants.PW_CALLBACK_CLASS, ClientCallbackHandler.class.getName());
        
        WSS4JOutInterceptor wssOut = new WSS4JOutInterceptor(outProps);
        endpoint.getOutInterceptors().add(wssOut);
        

//        BindingProvider bp = (BindingProvider) port;
//        bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY, "admin");
//        bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, "admin");
                
//        {
//        System.out.println("Invoking getTypeDescendants...");
//        java.lang.String _getTypeDescendants_repositoryId = "";
//        java.lang.String _getTypeDescendants_typeId = "";
//        java.math.BigInteger _getTypeDescendants_depth = new java.math.BigInteger("0");
//        java.lang.Boolean _getTypeDescendants_includePropertyDefinitions = null;
//        org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType _getTypeDescendants_extension = null;
//        try {
//            java.util.List<org.oasis_open.docs.ns.cmis.messaging._200908.CmisTypeContainer> _getTypeDescendants__return = port.getTypeDescendants(_getTypeDescendants_repositoryId, _getTypeDescendants_typeId, _getTypeDescendants_depth, _getTypeDescendants_includePropertyDefinitions, _getTypeDescendants_extension);
//            System.out.println("getTypeDescendants.result=" + _getTypeDescendants__return);
//
//        } catch (CmisException e) {
//            System.out.println("Expected exception: cmisException has occurred.");
//            System.out.println(e.toString());
//        }
//            }
//        {
//        System.out.println("Invoking getTypeChildren...");
//        java.lang.String _getTypeChildren_repositoryId = "";
//        java.lang.String _getTypeChildren_typeId = "";
//        java.lang.Boolean _getTypeChildren_includePropertyDefinitions = null;
//        java.math.BigInteger _getTypeChildren_maxItems = new java.math.BigInteger("0");
//        java.math.BigInteger _getTypeChildren_skipCount = new java.math.BigInteger("0");
//        org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType _getTypeChildren_extension = null;
//        try {
//            org.oasis_open.docs.ns.cmis.messaging._200908.CmisTypeDefinitionListType _getTypeChildren__return = port.getTypeChildren(_getTypeChildren_repositoryId, _getTypeChildren_typeId, _getTypeChildren_includePropertyDefinitions, _getTypeChildren_maxItems, _getTypeChildren_skipCount, _getTypeChildren_extension);
//            System.out.println("getTypeChildren.result=" + _getTypeChildren__return);
//
//        } catch (CmisException e) {
//            System.out.println("Expected exception: cmisException has occurred.");
//            System.out.println(e.toString());
//        }
//            }
        {
        System.out.println("Invoking getRepositoryInfo...");
        java.lang.String _getRepositoryInfo_repositoryId = "d93d8336-8536-421d-a888-44c1145d4104";
        org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType _getRepositoryInfo_extension = null;
        try {
            org.oasis_open.docs.ns.cmis.core._200908.CmisRepositoryInfoType _getRepositoryInfo__return = port.getRepositoryInfo(_getRepositoryInfo_repositoryId, _getRepositoryInfo_extension);
            System.out.println("getRepositoryInfo.result=" + _getRepositoryInfo__return);
            System.out.println("Root folder ID = " + _getRepositoryInfo__return.getRootFolderId());

        } catch (CmisException e) {
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }
//        {
//        System.out.println("Invoking getTypeDefinition...");
//        java.lang.String _getTypeDefinition_repositoryId = "";
//        java.lang.String _getTypeDefinition_typeId = "";
//        org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType _getTypeDefinition_extension = null;
//        try {
//            org.oasis_open.docs.ns.cmis.core._200908.CmisTypeDefinitionType _getTypeDefinition__return = port.getTypeDefinition(_getTypeDefinition_repositoryId, _getTypeDefinition_typeId, _getTypeDefinition_extension);
//            System.out.println("getTypeDefinition.result=" + _getTypeDefinition__return);
//
//        } catch (CmisException e) {
//            System.out.println("Expected exception: cmisException has occurred.");
//            System.out.println(e.toString());
//        }
//            }
        {
        System.out.println("Invoking getRepositories...");
        org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType _getRepositories_extension = null;
        try {
            java.util.List<org.oasis_open.docs.ns.cmis.messaging._200908.CmisRepositoryEntryType> _getRepositories__return = port.getRepositories(_getRepositories_extension);
            System.out.println("getRepositories.result=" + _getRepositories__return);
            CmisRepositoryEntryType repoEntry = _getRepositories__return.get(0);
            System.out.println("RepoID = " + repoEntry.getRepositoryId());

        } catch (CmisException e) {
            System.out.println("Expected exception: cmisException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
